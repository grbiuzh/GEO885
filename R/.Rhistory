amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
amm <- amm %>% mutate(EMISSIONS_KGCO2EQ = (EMISSIONS_KGCO2EQ * 1000))
drop <- c("id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv")
write.csv(amm_test, file = "Test_Data")
View(amm_distance)
amm$currencies <- amm$currencies == "USD"
amm$currencies <- "USD"
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv")
write.csv(amm_test, file = "Test_Data")
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv")
write.csv(amm_test, file = "amm_test.csv")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv")
write.csv(amm_test, file = "amm_test.csv")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ))
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ))
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv")
write.csv(amm_test, file = "amm_test.csv")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_numer = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm <- data.frame(mycol = c("flight_number"))
amm %>%
separate(mycol,
into = c("FN_IATA", "FN"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm %>%
separate(flight_number,
into = c("FN_IATA", "FN"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
amm %>%
separate("flight_number",
into = c("FN_IATA", "FN"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm <- amm %>%
separate("flight_number",
into = c("FN_IATA", "FN"),
sep = "(?<=[A-Za-z])(?=[0-9])")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm <- amm %>%
separate("flight_number",
into = c("FN_IATA", "FN"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm <- amm %>%
separate("flight_number",
into = c("fn_code", "fn_number"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm_test <- amm[1:11,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm <- amm %>%
separate("flight_number",
into = c("fn_code", "fn_number"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm_test <- amm[975:990,]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_test.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm <- amm %>%
separate("flight_number",
into = c("fn_code", "fn_number"),
sep = "(?<=[A-Za-z])(?=[0-9])")
amm_NONA <- amm[!is.na(amm$fn_code),]
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_test, file = "amm_NONA.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
write.csv(amm_NONA, file = "amm_NONA.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
View(amm_NONA)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(flight_number = Flugnummer,
DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination,
EMISSIONS_KGCO2EQ = "THG-Emissionen (in t CO2e)",
cabin_class = Serviceklasse,
currencies = "Kosten (in CHF)",
year = Jahr,
distance = "Distanz (in km)")
amm$cabin_class[amm$cabin_class == "Y"] <- "economy"
amm$cabin_class[amm$cabin_class == "B"] <- "business"
amm$cabin_class[amm$cabin_class == "F"] <- "first"
amm$cabin_class[amm$cabin_class == "P"] <- "premium_economy"
amm$currencies <- "USD"
amm <- amm %>% dplyr::select(-c(EMISSIONS_KGCO2EQ, distance))
amm <- amm %>%
separate("flight_number",
into = c("fn_code", "fn_number"),
sep = "(?<=[A-Za-z])(?=[0-9])")
subset(amm_NONA, RecID != 6869)
amm_NONA <- amm[!is.na(amm$fn_code),]
subset(amm_NONA, RecID != 6869)
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_NONA, file = "amm_NONA.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
amm_NONA <- amm[!is.na(amm$fn_code),]
amm_NON <- subset(amm_NONA, RecID != 6869)
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_NONA, file = "amm_NONA.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
View(amm_NONA)
amm_NONA <- amm[!is.na(amm$fn_code),]
amm_NONA <- subset(amm_NONA, RecID != 6869)
write.csv(amm, file = "amm.csv", row.names=FALSE)
write.csv(amm_NONA, file = "amm_NONA.csv", row.names=FALSE) # Emissions API geht mit beiden files oben
View(amm_NONA)
View(amm_NONA)
