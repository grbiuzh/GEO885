max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("target UZH", "target UZH all economy"),
values = c(red,blue))+
theme_light() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "right")
total_co2_plot
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2_regular,
aes(x, y, color="target UZH"), linetype="dotted",
size=.75) +
geom_line(data=uzh_target_co2_economy,
aes(x, y, color="target UZH all economy"), linetype="dotted",
size=.75) +
# geom_line(data=aggregated_uzh_economy,
#           aes(x=year, y=total_emission, color="optimal"),
#           size=.75) +
# geom_line(data=aggregated_uzh_regular,
#           aes(x=year, y=total_emission, color="observed"),
#           size=.75) +
# geom_point(data=aggregated_uzh_economy,
#             aes(x=year, y=total_emission),
#             color=orange, size=1.5) +
# geom_point(data=aggregated_uzh_regular,
#             aes(x=year, y=total_emission),
#             color=green, size=1.5) +
geom_hline(yintercept = 562793.7, linetype="dotted", size=.5)+
annotate("text", x = 2018.75, y = 590000, label=label, color=green, size=3) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("target UZH", "target UZH all economy"),
values = c(red,blue))+
theme_light() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "right")
total_co2_plot
library(interp)
install.packages("interp")
interpolated <- interp(df$arr_lon, df$arr_lat, df$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
ggplot()+
geom_point(data = df, aes(x = dep_lon, y = dep_lat), col = "red") +
geom_point(data = df, aes(x = arr_lon, y = arr_lat), col = "blue") +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))
library(interp)
interpolated <- interp(df$arr_lon, df$arr_lat, df$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
ggplot()+
geom_point(data = df, aes(x = dep_lon, y = dep_lat), col = "red") +
geom_point(data = df, aes(x = arr_lon, y = arr_lat), col = "blue") +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))
interpolated <- interp(dep_ZH$dep_lon, dep_ZH$dep_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
interpolated <- interp(dep_ZH$arr_lon, arr_ZH$dep_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
ggplot()+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))
#then you can use this in your plot
ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))
?interp
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))+
theme(legend.position = "none")+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
View(interpolated)
interpolated
interpolated <- interp(dep_ZH$dep_lon, dep_ZH$dep_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
?interp
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions))+
theme(legend.position = "none")+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .3)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
View(interp_df)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "points")
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "points")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
interpolated
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid",
method = "linear")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "median",
method = "linear")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "median",    #you have duplicated values
output = "grid",
method = "linear")
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "median",    #you have duplicated values
output = "grid",
extrap = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
linear = TRUE, extrap=FALSE, duplicate = "error", dupfun = NULL,
nx = 40, ny = 40,
jitter = 10^-12, jitter.iter = 6, jitter.random = FALSE,
remove = !linear)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "error",    #you have duplicated values
output = "grid",
extrap = TRUE)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "strip",    #you have duplicated values
output = "grid",
extrap = TRUE)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "strip",    #you have duplicated values
output = "grid",
extrap = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j)
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
ggsave(file="Figures/europe_flights.png", arrdep_europe,
width = 10,
height= 7)
#https://www.gis-blog.com/flight-connection-map-with-r/
ZRH <- filter(amm, DEPARTURE_AIRPORT!="ZRH")
#create basemap
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1") + title(main = "MNF flight paths world wide",col.main= "white", cex.main = .75)
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
for(i in 1:ncol(interp_df)){
interp_df$emissions[is.na(interp_df$emissions[,i]), i] <- mean(interp_df$emissions[,i], na.rm = TRUE)
}
interp_df$emissions <- interp_df %>% lapply(emissions, function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
interp_df$emissions <- lapply(interp_df$emissions, function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
View(interp_df)
class(interp_df)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid",
extrap = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
class(interp_df$emissions)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
library(slider)
library(scales)
library(wesanderson)
library(here)
library(maps)
library(isoband)
library(zoo)
# sf::sf_use_s2(FALSE)
dataFolder   <- here::here()
RFolder      <- here::here()
figureFolder <- here::here("figs")
countryflighty_counted <- read.csv(file.path(dataFolder, "countryflights_counted.csv"), sep = " ") #Without Switzerland
na.aggregate(interp_df)
na.aggregate(interp_df$emissions)
View(interp_df)
interp_df$emissions <- na.aggregate(interp_df$emissions)
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_fill(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), alpha = .5)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
dep_ZH_plot
na.aggregate()
?na.aggregate
?geom_contour
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions))+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_label_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_label_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
metR::geom_text_contour(aes(z = interp_df$emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
metR::geom_text_contour(aes(z = interp_df$emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
library(metR)
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
metR::geom_text_contour(aes(z = interp_df$emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
metR::geom_text_contour(aes(x = lon, y = lat,z = interp_df$emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
metR::geom_text_contour(data = interp_df,aes(x = lon, y = lat,z = interp_df$emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid",
extrap = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
# interp_df$emissions <- na.aggregate(interp_df$emissions) #Replaces all NA values with the mean of all values in this column
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat)) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE)+
metR::geom_text_contour(data = interp_df,aes(x = lon, y = lat,z = interp_df$emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
