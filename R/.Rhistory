?geom_col
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity")+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity")+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
all_emissions_plot
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = 1)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = 1)+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
all_emissions_plot
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = .5)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = .5)+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
all_emissions_plot
#Plot actual emissions per cabin class for original dataset
eco2 <- ggplot(emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year)) +
geom_bar(position="stack", stat="identity") +
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Cabin class for each flight at MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
eco2
ggsave(file="Figures/flight_class.png", eco2,
width = 10,
height= 7)
#Calculate emissions per cabinclass for altered data sets and merge with original to full list df
emissions_per_class_business <- amm_business %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_business$cabin_class[emissions_per_class_business$cabin_class == "business"] <- "all_business"
emissions_per_class_economy <- amm_economy %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_economy$cabin_class[emissions_per_class_economy$cabin_class == "economy"] <- "Economy predicted"
#Transform year to observed and predicted
emissions_per_class_economy$year[emissions_per_class_economy$year == "2018"] <- "2018_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2019"] <- "2019_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2020"] <- "2020_predicted"
emissions_per_class$year[emissions_per_class$year == "2018"] <- "2018_observed"
emissions_per_class$year[emissions_per_class$year == "2019"] <- "2019_observed"
emissions_per_class$year[emissions_per_class$year == "2020"] <- "2020_observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "economy"] <- "Economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "business"] <- "Business observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "premium_economy"] <- "Premium economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "first"] <- "First observed"
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = .5)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = .5)+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
all_emissions_plot
ggsave(file="Figures/emissions_comparison.png", all_emissions_plot,
width = 10,
height= 7)
emission_distance_plot <- ggplot()+
geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_point(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .1)+
geom_point(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .1)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
paste("The mean emissions in kgCO2 per km flying for all business flights is", mean(amm_business$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for all economy flights is", mean(amm_economy$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for regular flights is", mean(amm$kgCO2km))
#Plot actual emissions per cabin class for original dataset
eco2 <- ggplot(emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year)) +
geom_bar(position="stack", stat="identity") +
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Cabin class for each flight at MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_classic() +
theme(legend.position = c(0.86, 0.7))
eco2
ggsave(file="Figures/flight_class.png", eco2,
width = 10,
height= 7)
#Calculate emissions per cabinclass for altered data sets and merge with original to full list df
emissions_per_class_business <- amm_business %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_business$cabin_class[emissions_per_class_business$cabin_class == "business"] <- "all_business"
emissions_per_class_economy <- amm_economy %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_economy$cabin_class[emissions_per_class_economy$cabin_class == "economy"] <- "Economy predicted"
#Transform year to observed and predicted
emissions_per_class_economy$year[emissions_per_class_economy$year == "2018"] <- "2018_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2019"] <- "2019_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2020"] <- "2020_predicted"
emissions_per_class$year[emissions_per_class$year == "2018"] <- "2018_observed"
emissions_per_class$year[emissions_per_class$year == "2019"] <- "2019_observed"
emissions_per_class$year[emissions_per_class$year == "2020"] <- "2020_observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "economy"] <- "Economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "business"] <- "Business observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "premium_economy"] <- "Premium economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "first"] <- "First observed"
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = .5)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = .5)+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_classic() +
all_emissions_plot
#Plot actual emissions per cabin class for original dataset
eco2 <- ggplot(emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year)) +
geom_bar(position="stack", stat="identity") +
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Cabin class for each flight at MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_classic() +
theme(legend.position = c(0.86, 0.7))
eco2
ggsave(file="Figures/flight_class.png", eco2,
width = 10,
height= 7)
#Calculate emissions per cabinclass for altered data sets and merge with original to full list df
emissions_per_class_business <- amm_business %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_business$cabin_class[emissions_per_class_business$cabin_class == "business"] <- "all_business"
emissions_per_class_economy <- amm_economy %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_economy$cabin_class[emissions_per_class_economy$cabin_class == "economy"] <- "Economy predicted"
#Transform year to observed and predicted
emissions_per_class_economy$year[emissions_per_class_economy$year == "2018"] <- "2018_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2019"] <- "2019_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2020"] <- "2020_predicted"
emissions_per_class$year[emissions_per_class$year == "2018"] <- "2018_observed"
emissions_per_class$year[emissions_per_class$year == "2019"] <- "2019_observed"
emissions_per_class$year[emissions_per_class$year == "2020"] <- "2020_observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "economy"] <- "Economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "business"] <- "Business observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "premium_economy"] <- "Premium economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "first"] <- "First observed"
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = .5)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = .5)+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_classic()
all_emissions_plot
ggsave(file="Figures/emissions_comparison.png", all_emissions_plot,
width = 10,
height= 7)
emission_distance_plot <- ggplot()+
geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_point(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .1)+
geom_point(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .1)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_classic()
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
paste("The mean emissions in kgCO2 per km flying for all business flights is", mean(amm_business$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for all economy flights is", mean(amm_economy$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for regular flights is", mean(amm$kgCO2km))
#Plot actual emissions per cabin class for original dataset
eco2 <- ggplot(emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year)) +
geom_bar(position="stack", stat="identity") +
scale_fill_discrete(name = "Cabin class")+
ggtitle("Cabin class for each flight at MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_light() +
theme(legend.position = c(0.86, 0.7))
eco2
ggsave(file="Figures/flight_class.png", eco2,
width = 10,
height= 7)
#Calculate emissions per cabinclass for altered data sets and merge with original to full list df
emissions_per_class_business <- amm_business %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_business$cabin_class[emissions_per_class_business$cabin_class == "business"] <- "all_business"
emissions_per_class_economy <- amm_economy %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_economy$cabin_class[emissions_per_class_economy$cabin_class == "economy"] <- "Economy predicted"
#Transform year to observed and predicted
emissions_per_class_economy$year[emissions_per_class_economy$year == "2018"] <- "2018_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2019"] <- "2019_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2020"] <- "2020_predicted"
emissions_per_class$year[emissions_per_class$year == "2018"] <- "2018_observed"
emissions_per_class$year[emissions_per_class$year == "2019"] <- "2019_observed"
emissions_per_class$year[emissions_per_class$year == "2020"] <- "2020_observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "economy"] <- "Economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "business"] <- "Business observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "premium_economy"] <- "Premium economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "first"] <- "First observed"
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = .5)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = .5)+
scale_fill_discrete(name = "Cabin class")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_light()
all_emissions_plot
ggsave(file="Figures/emissions_comparison.png", all_emissions_plot,
width = 10,
height= 7)
emission_distance_plot <- ggplot()+
geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_point(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .1)+
geom_point(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .1)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
paste("The mean emissions in kgCO2 per km flying for all business flights is", mean(amm_business$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for all economy flights is", mean(amm_economy$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for regular flights is", mean(amm$kgCO2km))
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
library(slider)
library(scales)
library(wesanderson)
library(here)
library(maps)
library(isoband)
# sf::sf_use_s2(FALSE)
dataFolder   <- here::here()
RFolder      <- here::here()
figureFolder <- here::here("figs")
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
stat_contour()+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
stat_contour(color="red", size=0.25)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
?stat_contour
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(color="red", size=0.25)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
plot(amm$dep_coordinates, amm$arr_coordinates)
plot(amm$dep_coordinates, amm$arr_coordinates, pch= 19)
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="black")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="black")
View(europe_dep)
plot(europe_dep$dep_lon, europe_dep$arr_lat)
plot(europe_dep$dep_lon, europe_dep$arr_lat, pch = 19)
plot(europe_dep$dep_lon, europe_dep$arr_lat, pch = 19, col = red)
plot(europe_dep$dep_lon, europe_dep$arr_lat, pch = 19, col = red)
plot(europe_arr$arr_lon, europe_arr$arr_arr, pch = 18, col = blue)
plot(europe_dep$dep_lon, europe_dep$arr_lat, pch = 19, col = red)+
plot(europe_arr$arr_lon, europe_arr$arr_arr, pch = 18, col = blue)
plot(europe_dep$dep_lon, europe_dep$dep_lat, pch = 19, col = red)
plot(europe_arr$arr_lon, europe_arr$arr_arr, pch = 18, col = blue)
arrdep_europe
plot(x = c(europe_dep$dep_lon, europe_dep$dep_lat), y = c(europe_arr$arr_lon, europe_arr$arr_arr), pch = 19, col = red)
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(color="red", size=0.25)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
ggsave(file="Figures/europe_flights.png", arrdep_europe,
width = 10,
height= 7)
# contour(volcano,
#         col = cols)
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(mapping= amm$EMISSIONS_KGCO2EQ,color="red", size=0.25)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(data = amm, mapping= EMISSIONS_KGCO2EQ,color="red", size=0.25)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_text_contour(data = amm, aes(z = EMISSIONS_KGCO2EQ), stroke = 0.2)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(data = amm, aes(z = EMISSIONS_KGCO2EQ), stroke = 0.2)+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(data = europe_dep, aes(x= dep_lon, y = dep_lat ,z = EMISSIONS_KGCO2EQ))+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(data = europe_dep, aes(x= dep_lon, y = dep_lat ,z = distance_km))+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
europe_dep <- europe_dep %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
europe_arr <- europe_arr %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(data = europe_dep, aes(x= dep_lon, y = dep_lat ,z = distance_km))+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
ggsave(file="Figures/europe_flights.png", arrdep_europe,
width = 10,
height= 7)
# contour(volcano,
#         col = cols)
ggplot(data = europe_dep, aes(x = dep_lon, y = dep_lat))+
geom_contour(aes(z = distance_km))
ggplot(data = europe_dep, aes(x = dep_lon, y = dep_lat))+
geom_contour(aes(z = distance_km))
class(europe_dep$distance_km)
ggplot(data = europe_dep, aes(x = dep_lon, y = dep_lat))
class(europe_dep$dep_lon)
class(europe_dep$dep_lat)
ggplot()+
geom_point(data = europe_dep, aes(x = dep_lon, y = dep_lat))
ggplot(data = europe_dep)+
geom_point(aes(x = dep_lon, y = dep_lat))+
geom_contour(aes(z= distance_km))
ggplot(data = europe_dep, aes(x = dep_lon, y = dep_lat))+
geom_point()+
geom_contour(aes(z= distance_km))
europe_dep <- europe_dep %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT) %>% drop_na(distance_km)
europe_arr <- europe_arr %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT) %>% drop_na(distance_km)
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
geom_contour(data = europe_dep, aes(x= dep_lon, y = dep_lat ,z = distance_km))+
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
ggsave(file="Figures/europe_flights.png", arrdep_europe,
width = 10,
height= 7)
# contour(volcano,
#         col = cols)
ggplot(data = europe_dep, aes(x = dep_lon, y = dep_lat))+
geom_point()+
geom_contour(aes(z= distance_km))
is.na(europe_dep)
is.na(europe_dep) %>% count()
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
