points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1") + title(main = "MNF flight paths world wide",col.main= "white", cex.main = .75)
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
#https://www.gis-blog.com/flight-connection-map-with-r/
ZRH <- filter(amm, DEPARTURE_AIRPORT!="ZRH")
#create basemap
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1")
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "magma", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
ggsave(file="Figures/dep_ZH_europeflights_distance.png", dep_ZH_plot_distance,
width = 10,
height= 7)
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "magma", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "white") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "magma", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "green") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "magma", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "plasma", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
?scale_fill_viridis_c
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "inferno", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "inferno", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "white") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "inferno", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis(labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "rocket", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = -"rocket", labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "rocket",direction = -1, labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "rocket",direction = -1, labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black", pch = 12) +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "rocket",direction = -1, labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "red", pch = 12) +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
dep_ZH_plot_distance <- ggplot()+
geom_sf(data=countryflighty_counted_EU, aes(geometry = geometry, fill = n))+
scale_fill_viridis_c(option = "rocket",direction = -1, labs( colour=  "Count per country"))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1, col = "black") +
geom_circle(aes(y0 = 47.45806, x0 =8.548056, r = 11), geom = "circle", position = "identity", col = "red")+
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_distance
ggsave(file="Figures/dep_ZH_europeflights_distance.png", dep_ZH_plot_distance,
width = 10,
height= 7)
?geom_contour
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_contour(data = interp_df, aes(x = lon, y = lat, z = emissions),alpha = .6)+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .6)+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .6)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
dep_ZH_plot_distance
?interp
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",
nx= 1000,
ny = 1000)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",
nx= 100,
ny = 100, jitter.random = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
ggsave(file="Figures/dep_ZH_europeflights_iso.png", dep_ZH_plot_iso,
width = 10,
height= 7)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",
nx= 100,
ny = 100, jitter.random = FALSE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
ggsave(file="Figures/dep_ZH_europeflights_iso.png", dep_ZH_plot_iso,
width = 10,
height= 7)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",
nx= 100,
ny = 100, jitter.random = TRUE,
extrap = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
?geom_contour_filled
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",
nx= 500,
ny = 500, jitter.random = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions, label = "Legend"),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),alpha = .5)+
labels(colours = "Emission zones")
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),alpha = .5)+
labs(colours = "Emission zones")+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions,labs(colours = "Emission zones")),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")+
labs(colour="NEW LEGEND TITLE")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),show_legend= TRUE, alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")+
labs(colour="NEW LEGEND TITLE")
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),show_legend= TRUE, alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")+
guides(fill=guide_legend(title="New Legend Title"))
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),show.legend = TRUE, alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")+
guides(fill=guide_legend(title="New Legend Title"))
dep_ZH_plot_iso
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),show.legend = TRUE, alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
xlab("Longitude") + ylab("Latitude")+
guides(fill=guide_legend(title="Emission zones [kgCO2]"))
dep_ZH_plot_iso
dep_ZH_plot_iso
ggsave(file="Figures/dep_ZH_europeflights_iso.png", dep_ZH_plot_iso,
width = 10,
height= 7)
#then you can use this in your plot
dep_ZH_plot_iso <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions),show.legend = TRUE, alpha = .5)+
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 2) +
xlab("Longitude") + ylab("Latitude")+
guides(fill=guide_legend(title="Emission zones [kgCO2]"))
dep_ZH_plot_iso
dep_ZH_plot_iso
ggsave(file="Figures/dep_ZH_europeflights_iso.png", dep_ZH_plot_iso,
width = 10,
height= 7)
label <- paste0("1000km threshold")
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2018.75, y = 590000, label=label, color=green, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2018.75, y = 3, label=label, color=green, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 1300, y = 2, label=label, color=green, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2300, y = 2, label=label, color=green, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2500, y = 1, label=label, color=green, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2700, y = 1, label=label, color=green, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2700, y = 1, label=label, color=black, size=4) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
scale_color_manual(labels = c("Observed", "Economy"),
values = c("blue", "red"))+
annotate("text", x = 2700, y = 1, label=label, color=black, size=3) +
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
map("world", fill=T, col="white", bg="black")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="blue")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="blue")
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
#create basemap
map("world", fill=T, col="grey", bg="white")
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
map("world", fill=T, col="grey", bg="white")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="blue")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="blue")
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
map("world", fill=T, col="lightgrey", bg="white")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="blue")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="blue")
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="lightblue")
}
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="red")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="red")
map("world", fill=T, col="lightgrey", bg="white")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="red")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="red")
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="blue")
}
