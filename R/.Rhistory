max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("observed","target UZH"),
values = c(green,orange))+
theme_bw() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = c(0.8, 0.25))
total_co2_plot
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2,
aes(x, y, color="target UZH"), linetype="dashed",
size=1) +
geom_line(data=aggregated_uzh_economy,
aes(x=year, y=total_emission, color="red"),
size=1) +
geom_line(data=aggregated_uzh_regular,
aes(x=year, y=total_emission, color="green"),
size=1) +
geom_line(data=aggregated_uzh_business,
aes(x=year, y=total_emission, color="blue"),
size=1) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("observed","target UZH"),
values = c(green,orange))+
theme_bw() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = c(0.8, 0.25))
reference_period <- c(2018:2020)
target_period <- c(2022, 2030)
full_period <- c(2018:2030)
aggregated_uzh_regular <- amm %>%
group_by(year) %>%
summarise(total_emission = sum(EMISSIONS_KGCO2EQ, na.rm=FALSE)) %>%
mutate(total_emission_3y_mean = slide_dbl(total_emission, mean,
.before = 1, .after = 1,
.complete = T))
# UZH: only 2018 and 2019
uzh_baseline_co2 <- aggregated_uzh %>%
filter(year %in% reference_period[]) %>%
summarize(mean = mean(total_emission, na.rm=TRUE)) %>%
pull(mean)
# Define target
uzh_target_co2 <- data.frame(x=target_period,
y=c(uzh_baseline_co2,
(uzh_baseline_co2/100)*0.47))
max_co2 <- max(aggregated_uzh$total_emission)
aggregated_uzh_business <- amm_business %>%
group_by(year) %>%
summarise(total_emission = sum(EMISSIONS_KGCO2EQ, na.rm=FALSE)) %>%
mutate(total_emission_3y_mean = slide_dbl(total_emission, mean,
.before = 1, .after = 1,
.complete = T))
aggregated_uzh_economy <- amm_economy %>%
group_by(year) %>%
summarise(total_emission = sum(EMISSIONS_KGCO2EQ, na.rm=FALSE)) %>%
mutate(total_emission_3y_mean = slide_dbl(total_emission, mean,
.before = 1, .after = 1,
.complete = T))
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2,
aes(x, y, color="target UZH"), linetype="dashed",
size=1) +
geom_line(data=aggregated_uzh_economy,
aes(x=year, y=total_emission, color="red"),
size=1) +
geom_line(data=aggregated_uzh_regular,
aes(x=year, y=total_emission, color="green"),
size=1) +
geom_line(data=aggregated_uzh_business,
aes(x=year, y=total_emission, color="blue"),
size=1) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("observed","target UZH"),
values = c(green,orange))+
theme_bw() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = c(0.8, 0.25))
total_co2_plot
total_co2_plot
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2,
aes(x, y, color="target UZH"), linetype="dashed",
size=1) +
geom_line(data=aggregated_uzh_economy,
aes(x=year, y=total_emission, color="red"),
size=1) +
geom_line(data=aggregated_uzh_regular,
aes(x=year, y=total_emission, color="green"),
size=1) +
geom_line(data=aggregated_uzh_business,
aes(x=year, y=total_emission, color="blue"),
size=1)
# ylab("kg CO2 eq.") +
# scale_x_continuous(breaks=full_period,
#                    limits=c(min(full_period),
#                             max(full_period))) +
# scale_y_continuous(label=comma,
#                    limits=c(0,max_co2*1.02)) +
# ggtitle("UZH air travel (2018-2020): emissions")+
# scale_colour_manual("",
#                     breaks = c("observed","target UZH"),
#                     values = c(green,orange))+
# theme_bw() +
# theme(text = element_text(size=16),
#       axis.title.x = element_blank(),
#       panel.grid.major.x = element_blank(),
#       panel.grid.minor.x = element_blank(),
#       panel.grid.minor.y = element_blank(),
#       legend.position = c(0.8, 0.25))
total_co2_plot
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2,
aes(x, y, color="target UZH"), linetype="dashed",
size=1) +
geom_line(data=aggregated_uzh_economy,
aes(x=year, y=total_emission, color="observed"),
size=1) +
geom_line(data=aggregated_uzh_regular,
aes(x=year, y=total_emission, color="optimal"),
size=1) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("observed","optimal","target UZH"),
values = c(green,orange,red))+
theme_bw() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = c(0.8, 0.25))
total_co2_plot
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2,
aes(x, y, color="target UZH"), linetype="dashed",
size=1) +
geom_line(data=aggregated_uzh_economy,
aes(x=year, y=total_emission, color="optimal"),
size=1) +
geom_line(data=aggregated_uzh_regular,
aes(x=year, y=total_emission, color="observed"),
size=1) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("observed","optimal","target UZH"),
values = c(green,orange,red))+
theme_bw() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = c(0.8, 0.25))
total_co2_plot
View(aggregated_uzh_regular)
aggregated_uzh_regular$total_emission_3y_mean
1196267*0.07
View(amm)
mean(amm$EMISSIONS_KGCO2EQ)
83738.69/656.9284
amm %>% group_by(year) %>% count()
53/8
1196267/656.9284
127.47*8
View(aggregated_uzh_economy)
1196267*0.47
50/8
amm_shortdist <- amm %>% subset(select(distance_km >= 1000))
class(amm$distance_km)
amm_shortdist <- amm %>% filter(distance_km >= 1000)
View(amm_shortdist)
amm_shortdist <- amm %>% filter(distance_km <= 1000)
amm_shortdist <- amm_economy %>% filter(distance_km <= 1000)
amm_shortdist %>% mean(EMISSIONS_KGCO2EQ)
mean(amm_stortdist$EMISSIONS_KGCO2EQ)
mean(amm_shortdist$EMISSIONS_KGCO2EQ)
1130033-562245.5
567787.5/226.7974
#2503.501
2503.501/nrow(amm_shortdist)
#0.9625148
#Reduce short dist flighty by 96% untill the year 2030
0.9625148/8
#Reduce flighty by 12% per year, meaning:
2503.501*0.12
300*226.7974
567787.5/68039.22
68039.22/567787.5
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
library(slider)
library(scales)
library(wesanderson)
library(here)
library(maps)
# sf::sf_use_s2(FALSE)
dataFolder   <- here::here()
RFolder      <- here::here()
figureFolder <- here::here("figs")
red <- wes_palette("Darjeeling1")[1]
green <- wes_palette("Darjeeling1")[2]
orange <- wes_palette("Darjeeling1")[3]
blue <- wes_palette("Darjeeling1")[5]
dark_orange <- wes_palette("Darjeeling1")[4]
black <- wes_palette("Darjeeling2")[5]
airports <- read.csv(file.path(dataFolder, "airports.csv"))
amm_incomplete <- read_excel(file.path(dataFolder, "MNF_amm.xlsx")) #Datensatz mit allen Flügen, vollständig und unvollständig
world <- st_read(file.path(dataFolder, "TM_WORLD_BORDERS_SIMPL-0 Kopie"))
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326, remove = FALSE) %>% rename(coordinates = geometry)
amm <- read.csv(file.path(dataFolder, "amm_complete.csv"))
# Alle Flugdaten mit "MISSING" values
amm <- subset(amm, select = -c(IATA_CODE_DEP))
amm <- subset(amm, select = -c(IATA_CODE_ARR))
amm$EMISSIONS_KGCO2EQ <- as.numeric(amm$EMISSIONS_KGCO2EQ)
amm <- amm %>% drop_na(EMISSIONS_KGCO2EQ)
paste("Completeness of dataset", (nrow(amm)/nrow(amm_incomplete))*100,"%")
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
drop <- c("id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm <- amm %>% rename(dep_lon = longitude_deg.x,
dep_lat = latitude_deg.x,
arr_lon = longitude_deg.y,
arr_lat = latitude_deg.y)
amm <- amm %>% rowwise() %>%
mutate(distance_km = (geosphere::distHaversine(c(dep_lon, dep_lat),
c(arr_lon, arr_lat)))/1000)
emissions_per_class <- amm %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
aggregated_distance <- amm %>%
group_by(year) %>%
summarise(total_distance = sum(distance_km))
max_distance <- max(aggregated_distance$total_distance)
arrdep <- ggplot() +
geom_sf(data=world)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = .5, shape = 23) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .5, shape = 23) +
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path")+
theme(legend.position = "none")
arrdep
ggsave(file="Figures/flight_locations.png", arrdep,
width = 10,
height= 7)
#https://www.gis-blog.com/flight-connection-map-with-r/
ZRH <- filter(amm, DEPARTURE_AIRPORT!="ZRH")
#create basemap
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1") + title(main = "MNF flight paths world wide",col.main= "white", cex.main = .75)
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.25, col="turquoise2")
}
amm_arr <- st_as_sf(amm_arr)
sf::sf_use_s2(FALSE)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
flightmap_sort <- flightmap_sort %>% filter(flightmap_sort$NAME != "Switzerland")
countryflighty_counted = flightmap_sort
countryflighty_counted$geometry = NULL
write.table(countryflighty_counted,file="countryflights_counted.csv")
#ISO2 form european countries
EUISO2 <- read.csv(file.path(dataFolder, "EuroAlpha2-Codes.csv"), sep = ";")
names(EUISO2)[1] <- "Name"
EUISO2$Name <-gsub("Â","",as.character(EUISO2$Name))
#subset of european countries from world df
europe<- left_join(EUISO2, world)
europe$Name <- NULL
europe_ohne_RU <-subset(europe, ISO2!= "RU")
#just european flights arrival and departure
europe_arr <- amm[which(amm$arr_country %in% unique(EUISO2$ISO2)),]
europe_arr <- europe_arr %>% filter(arr_country != "RU")
europe_dep <- amm[which(amm$dep_country %in% unique(EUISO2$ISO2)),]
europe_dep <- europe_dep %>% filter(dep_country != "RU")
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
ggsave(file="Figures/europe_flights.png", arrdep_europe,
width = 10,
height= 7)
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(europe_dep$dep_lon, europe_dep$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(europe_arr$arr_lon, europe_arr$arr_lat, pch=3, cex=0.1, col="turquoise") + title(main = "MNF flights europe",col.main= "white", cex.main = 1.5)
cc_count_in <- amm_incomplete %>%
group_by(Serviceklasse) %>%
summarise(cnt = n()) %>%
mutate(freq = round(cnt / sum(cnt), 2)) %>%
arrange(desc(freq))
cc_count_com <- amm %>%
group_by(cabin_class) %>%
summarise(cnt = n()) %>%
mutate(freq = round(cnt / sum(cnt), 2)) %>%
arrange(desc(freq))
amm <- amm %>% rowwise() %>% mutate(kgCO2km = EMISSIONS_KGCO2EQ / distance_km)
amm = amm[,!(names(amm) %in% drop)]
reference_period <- c(2018:2020)
target_period <- c(2022, 2030)
full_period <- c(2018:2030)
aggregated_uzh_regular <- amm %>%
group_by(year) %>%
summarise(total_emission = sum(EMISSIONS_KGCO2EQ, na.rm=FALSE)) %>%
mutate(total_emission_3y_mean = slide_dbl(total_emission, mean,
.before = 1, .after = 1,
.complete = T))
# UZH: only 2018 and 2019
uzh_baseline_co2 <- aggregated_uzh %>%
filter(year %in% reference_period[]) %>%
summarize(mean = mean(total_emission, na.rm=TRUE)) %>%
pull(mean)
# UZH: only 2018 and 2019
uzh_baseline_co2 <- aggregated_uzh_regular %>%
filter(year %in% reference_period[]) %>%
summarize(mean = mean(total_emission, na.rm=TRUE)) %>%
pull(mean)
# Define target
uzh_target_co2 <- data.frame(x=target_period,
y=c(uzh_baseline_co2,
(uzh_baseline_co2/100)*0.47))
max_co2 <- max(aggregated_uzh$total_emission)
max_co2 <- max(aggregated_uzh_regular$total_emission)
#Tidy dataframes for kgCO2 per km analysis
amm_economy <- read.csv(file.path(dataFolder, "amm_economy_complete.csv"), sep = ",")
amm_business <- read.csv(file.path(dataFolder, "amm_business_complete.csv"), sep = ",")
amm <- amm %>% as.data.frame()
amm <- amm %>% filter_all(all_vars(!is.infinite(kgCO2km))) %>% drop_na(kgCO2km)
amm_business <- amm_business %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
amm_economy <- amm_economy %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
amm <- amm %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
#Plot actual emissions per cabin class for original dataset
eco2 <- ggplot(emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year)) +
geom_bar(position="stack", stat="identity") +
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Cabin class for each flight at MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
eco2
ggsave(file="Figures/flight_class.png", eco2,
width = 10,
height= 7)
#Calculate emissions per cabinclass for altered data sets and merge with original to full list df
emissions_per_class_business <- amm_business %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_business$cabin_class[emissions_per_class_business$cabin_class == "business"] <- "all_business"
emissions_per_class_economy <- amm_economy %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_economy$cabin_class[emissions_per_class_economy$cabin_class == "economy"] <- "all_economy"
emissions_list <- rbind(emissions_per_class, emissions_per_class_business, emissions_per_class_economy) #All emissions per class data frames in one
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_list, aes(fill=cabin_class, y=total_emissions, x=year), position="dodge", stat="identity")+
scale_fill_discrete(name = "Reason for travel")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_bw() +
theme(legend.position = c(0.86, 0.7))
all_emissions_plot
ggsave(file="Figures/emissions_comparison.png", all_emissions_plot,
width = 10,
height= 7)
emission_distance_plot <- ggplot()+
geom_line(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"))+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"))+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"))+
geom_vline(xintercept = 1000, linetype="dotted", size=1.5)
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")
emission_distance_plot <- ggplot()+
geom_line(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"))+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"))+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"))+
geom_vline(xintercept = 1000, linetype="dotted", size=1.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")
emission_distance_plot
emission_distance_plot <- ggplot()+
geom_line(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"))+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"))+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"))+
geom_vline(xintercept = 1000, size=.75)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")
emission_distance_plot
emission_distance_plot <- ggplot()+
geom_line(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"))+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"))+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"))+
geom_vline(xintercept = 1000, size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
emission_distance_plot <- ggplot()+
geom_line(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"))+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"))+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"))+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy", "Business"),
values = c("blue", "green","red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
