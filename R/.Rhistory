amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
drop <- c("id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm <- amm %>% rename(dep_lon = longitude_deg.x,
dep_lat = latitude_deg.x,
arr_lon = longitude_deg.y,
arr_lat = latitude_deg.y)
amm <- amm %>% rowwise() %>%
mutate(distance_km = (geosphere::distHaversine(c(dep_lon, dep_lat),
c(arr_lon, arr_lat)))/1000)
emissions_per_class <- amm %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
aggregated_distance <- amm %>%
group_by(year) %>%
summarise(total_distance = sum(distance_km))
max_distance <- max(aggregated_distance$total_distance)
arrdep <- ggplot() +
geom_sf(data=world)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = .5, shape = 23) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .5, shape = 23) +
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path")+
theme(legend.position = "none")
arrdep
ggsave(file="Figures/flight_locations.png", arrdep,
width = 10,
height= 7)
#https://www.gis-blog.com/flight-connection-map-with-r/
ZRH <- filter(amm, DEPARTURE_AIRPORT!="ZRH")
#create basemap
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1") + title(main = "MNF flight paths world wide",col.main= "white", cex.main = .75)
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.25, col="turquoise2")
}
amm_arr <- st_as_sf(amm_arr)
sf::sf_use_s2(FALSE)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
flightmap_sort <- flightmap_sort %>% filter(flightmap_sort$NAME != "Switzerland")
countryflighty_counted = flightmap_sort
countryflighty_counted$geometry = NULL
write.table(countryflighty_counted,file="countryflights_counted.csv")
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
library(slider)
library(scales)
library(wesanderson)
library(here)
library(maps)
library(isoband)
library(zoo)
library(metR)
install.packages("metR")
library(metR)
library(akima)
install.packages("akima")
library(akima)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
library(readxl)
library(slider)
library(scales)
library(wesanderson)
library(here)
library(maps)
library(isoband)
library(zoo)
library(metR)
library(akima)
# sf::sf_use_s2(FALSE)
dataFolder   <- here::here()
RFolder      <- here::here()
figureFolder <- here::here("figs")
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
#ISO2 form european countries
EUISO2 <- read.csv(file.path(dataFolder, "EuroAlpha2-Codes.csv"), sep = ";")
names(EUISO2)[1] <- "Name"
EUISO2$Name <-gsub("Ã‚","",as.character(EUISO2$Name))
#subset of european countries from world df
europe<- left_join(EUISO2, world)
europe$Name <- NULL
europe_ohne_RU <-subset(europe, ISO2!= "RU")
#just european flights arrival and departure
europe_arr <- amm[which(amm$arr_country %in% unique(EUISO2$ISO2)),]
europe_arr <- europe_arr %>% filter(arr_country != "RU")
europe_dep <- amm[which(amm$dep_country %in% unique(EUISO2$ISO2)),]
europe_dep <- europe_dep %>% filter(dep_country != "RU")
europe_dep <- europe_dep %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT) %>% drop_na(distance_km)
europe_arr <- europe_arr %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT) %>% drop_na(distance_km)
dep_ZH <- europe_arr %>% filter(DEPARTURE_AIRPORT == "ZRH") #All flights origination in ZRH and landing in Europe
arrdep_europe <-ggplot() +
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_sf(data = europe_dep, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = 2, shape = 9) +
geom_sf(data = europe_arr, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .75, shape = 19) +
ggtitle("Departure and arrival locations for all european flights separated by symbols")+ xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path") +
theme(legend.position = "none")
arrdep_europe
ggsave(file="Figures/europe_flights.png", arrdep_europe,
width = 10,
height= 7)
#https://www.gis-blog.com/flight-connection-map-with-r/
ZRH <- filter(amm, DEPARTURE_AIRPORT!="ZRH")
#create basemap
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1") + title(main = "MNF flight paths world wide",col.main= "white", cex.main = .75)
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
countryflighty_counted <- read.csv(file.path(dataFolder, "countryflights_counted.csv"), sep = " ") #Without Switzerland
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
output = "grid",
extrap = TRUE)
interpolated <- interp(dep_ZH$arr_lon, dep_ZH$arr_lat, dep_ZH$EMISSIONS_KGCO2EQ,
duplicate = "mean",    #you have duplicated values
#output = "grid",
extrap = TRUE)
#convert this to a long form dataframe
interp_df <- expand_grid(i = seq_along(interpolated$x), j = seq_along(interpolated$y)) %>%
mutate(lon = interpolated$x[i],
lat = interpolated$y[j],
emissions = map2_dbl(i, j, ~interpolated$z[.x,.y])) %>%
select(-i, -j) %>% data.frame()
interp_df$emissions <- na.aggregate(interp_df$emissions) #Replaces all NA values with the mean of all values in this column
#then you can use this in your plot
dep_ZH_plot <- ggplot()+
geom_sf(data=europe_ohne_RU, aes(geometry = geometry))+
geom_point(data = dep_ZH, aes(x = dep_lon, y = dep_lat), col = "red", pch = 13, size = 3) +
geom_point(data = dep_ZH, aes(x = arr_lon, y = arr_lat), size = 1) +
geom_contour_filled(data = interp_df, aes(x = lon, y = lat, z = emissions), show.legend = TRUE, alpha = .6)+
#metR::geom_text_contour(data = interp_df,aes(x = lon, y = lat,z = emissions)) +
ggtitle("All european flights originating from Switzerland")+ xlab("Longitude") + ylab("Latitude")+
labs(colour = "Emission zones [kgCO2]")
dep_ZH_plot
ggsave(file="Figures/dep_ZH_europeflights.png", dep_ZH_plot,
width = 10,
height= 7)
View(interp_df)
cc_count_in <- amm_incomplete %>%
group_by(Serviceklasse) %>%
summarise(cnt = n()) %>%
mutate(freq = round(cnt / sum(cnt), 2)) %>%
arrange(desc(freq))
cc_count_com <- amm %>%
group_by(cabin_class) %>%
summarise(cnt = n()) %>%
mutate(freq = round(cnt / sum(cnt), 2)) %>%
arrange(desc(freq))
amm <- amm %>% rowwise() %>% mutate(kgCO2km = EMISSIONS_KGCO2EQ / distance_km)
amm = amm[,!(names(amm) %in% drop)]
amm_economy <- read.csv(file.path(dataFolder, "amm_economy_complete.csv"), sep = ",")
amm_business <- read.csv(file.path(dataFolder, "amm_business_complete.csv"), sep = ",")
reference_period <- c(2018:2020)
target_period <- c(2019, 2030)
full_period <- c(2018:2030)
aggregated_uzh_regular <- amm %>%
group_by(year) %>%
summarise(total_emission = sum(EMISSIONS_KGCO2EQ, na.rm=FALSE)) %>%
mutate(total_emission_3y_mean = slide_dbl(total_emission, mean,
.before = 1, .after = 1,
.complete = T))
#Determine difference in emissions between all economy and regular flight data
aggregated_uzh_economy <- amm_economy %>%
group_by(year) %>%
summarise(total_emission = sum(EMISSIONS_KGCO2EQ, na.rm=FALSE)) %>%
mutate(total_emission_3y_mean = slide_dbl(total_emission, mean,
.before = 1, .after = 1,
.complete = T))
#mean emissions for 2018 and 2019: 1384100
# UZH: only 2018 and 2019
uzh_baseline_co2_regular <- aggregated_uzh_regular %>%
filter(year %in% reference_period[]) %>%
summarize(mean = mean(total_emission, na.rm=TRUE)) %>%
pull(mean)
uzh_baseline_co2_economy <- aggregated_uzh_economy %>%
filter(year %in% reference_period[]) %>%
summarize(mean = mean(total_emission, na.rm=TRUE)) %>%
pull(mean)
# Define target
uzh_target_co2_regular <- data.frame(x=target_period,
y=c(uzh_baseline_co2_regular,
uzh_baseline_co2_regular*0.47))
uzh_target_co2_economy <- data.frame(x=c(2019,2019,2030),
y=c(uzh_baseline_co2_regular,uzh_baseline_co2_economy,uzh_baseline_co2_economy*0.49803))
max_co2 <- max(aggregated_uzh_regular$total_emission)
#Tidy dataframes for kgCO2 per km analysis
amm <- amm %>% as.data.frame()
amm <- amm %>% filter_all(all_vars(!is.infinite(kgCO2km))) %>% drop_na(kgCO2km)
amm_business <- amm_business %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
amm_economy <- amm_economy %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
amm <- amm %>% filter(DEPARTURE_AIRPORT != ARRIVAL_AIRPORT)
#Plot actual emissions per cabin class for original dataset
eco2 <- ggplot(emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year)) +
geom_bar(position="stack", stat="identity") +
scale_fill_discrete(name = "Cabin class")+
ggtitle("Cabin class for each flight at MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_light() +
theme(legend.position = c(0.86, 0.7))
eco2
ggsave(file="Figures/flight_class.png", eco2,
width = 10,
height= 7)
#Calculate emissions per cabinclass for altered data sets and merge with original to full list df
emissions_per_class_business <- amm_business %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_business$cabin_class[emissions_per_class_business$cabin_class == "business"] <- "all_business"
emissions_per_class_economy <- amm_economy %>%
group_by(year, cabin_class) %>%
summarise(total_emissions = sum(EMISSIONS_KGCO2EQ))
emissions_per_class_economy$cabin_class[emissions_per_class_economy$cabin_class == "economy"] <- "Economy predicted"
#Transform year to observed and predicted
emissions_per_class_economy$year[emissions_per_class_economy$year == "2018"] <- "2018_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2019"] <- "2019_predicted"
emissions_per_class_economy$year[emissions_per_class_economy$year == "2020"] <- "2020_predicted"
emissions_per_class$year[emissions_per_class$year == "2018"] <- "2018_observed"
emissions_per_class$year[emissions_per_class$year == "2019"] <- "2019_observed"
emissions_per_class$year[emissions_per_class$year == "2020"] <- "2020_observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "economy"] <- "Economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "business"] <- "Business observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "premium_economy"] <- "Premium economy observed"
emissions_per_class$cabin_class[emissions_per_class$cabin_class == "first"] <- "First observed"
#Plot all three different data frames into one to compare emissions
all_emissions_plot <- ggplot() +
geom_col(data = emissions_per_class, aes(fill=cabin_class, y=total_emissions, x=year), position="stack", stat="identity", width = .5)+
geom_col(data = emissions_per_class_economy, aes(fill=cabin_class, y=total_emissions, x=year), stat="identity", width = .5)+
scale_fill_discrete(name = "Cabin class")+
ggtitle("Emissions for each cabin class at the MNF (2018-2020)") +
xlab("") +
ylab("emissions [kgCO2]") +
scale_y_continuous(label=comma,
limits=c(0,max_distance*1.02)) +
theme_light()
all_emissions_plot
ggsave(file="Figures/emissions_comparison.png", all_emissions_plot,
width = 10,
height= 7)
emission_distance_plot <- ggplot()+
# geom_point(data = amm_business, aes(y= kgCO2km, x = distance_km, col="red"), size = .1)+
geom_line(data = amm, aes(y= kgCO2km, x = distance_km, col="blue"), size = .5)+
geom_line(data = amm_economy, aes(y= kgCO2km, x = distance_km, col="green"), size = .5)+
geom_vline(xintercept = 1000, linetype="dotted", size=.5)+
ggtitle("kgCO2 emitted per km flying")+
scale_color_manual(labels = c("Regular", "Economy"),
values = c("blue", "red"))+
ylab("kgCO2 emitted per flight km")+
xlab("Flight distance [km]")+
labs(colour = "Cabin class")+
theme_light()
emission_distance_plot
ggsave(file="Figures/emissions_distance.png", emission_distance_plot,
width = 10,
height= 7)
#mean all economy 1130033 kgCO2 ,6.25% reduction  per year
amm_shortdist <- amm_economy %>% filter(distance_km <= 1000)
mean(amm_shortdist$EMISSIONS_KGCO2EQ)
567787.5/226.7974
#2503.501
2503.501/nrow(amm_shortdist)
#0.9625148
#Reduce short dist flighty by 96% untill the year 2030
label <- paste0("MNF reduction target")
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2_regular,
aes(x, y, color="target UZH"), linetype="dotted",
size=.75) +
geom_line(data=uzh_target_co2_economy,
aes(x, y, color="target UZH all economy"), linetype="dotted",
size=.75) +
# geom_line(data=aggregated_uzh_economy,
#           aes(x=year, y=total_emission, color="optimal"),
#           size=.75) +
# geom_line(data=aggregated_uzh_regular,
#           aes(x=year, y=total_emission, color="observed"),
#           size=.75) +
# geom_point(data=aggregated_uzh_economy,
#             aes(x=year, y=total_emission),
#             color=orange, size=1.5) +
# geom_point(data=aggregated_uzh_regular,
#             aes(x=year, y=total_emission),
#             color=green, size=1.5) +
geom_hline(yintercept = 562793.7, linetype="dotted", size=.5)+
annotate("text", x = 2018.75, y = 590000, label=label, color=green, size=3) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(0,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("target UZH", "target UZH all economy"),
values = c(red,blue))+
theme_light() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "right")
total_co2_plot
ggsave(file="Figures/target_goal_plot.png", total_co2_plot,
width = 10,
height= 7)
#Statistics
paste("The mean emissions in kgCO2 per km flying for all business flights is", mean(amm_business$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for all economy flights is", mean(amm_economy$kgCO2km))
paste("The mean emissions in kgCO2 per km flying for regular flights is", mean(amm$kgCO2km))
#https://www.gis-blog.com/flight-connection-map-with-r/
ZRH <- filter(amm, DEPARTURE_AIRPORT!="ZRH")
#create basemap
map("world", fill=T, col="grey8", bg="grey15")
#overlay airports
points(amm$dep_lon, amm$dep_lat, pch=3, cex=0.1, col="chocolate1")+
points(amm$arr_lon, amm$arr_lat, pch=3, cex=0.1, col="chocolate1") + title(main = "MNF flight paths world wide",col.main= "white", cex.main = .75)
for (i in (1:dim(amm)[1])){
inter <- gcIntermediate(c(amm$dep_lon[i], amm$dep_lat[i]), c(amm$arr_lon[i], amm$arr_lat[i]))
lines(inter, lwd=0.1, col="turquoise2")
}
arrdep <- ggplot() +
geom_sf(data=world)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates"), size = .5, shape = 23) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates"), size = .5, shape = 23) +
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")+
scale_color_manual(labels = c("Arrival", "Departure"),
values = c("red", "blue"))+
labs(colour = "Flight path")+
theme(legend.position = "none")
arrdep
ggsave(file="Figures/flight_locations.png", arrdep,
width = 10,
height= 7)
label <- paste0("MNF reduction target")
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2_regular,
aes(x, y, color="target UZH"), linetype="dotted",
size=.75) +
geom_line(data=uzh_target_co2_economy,
aes(x, y, color="target UZH all economy"), linetype="dotted",
size=.75) +
# geom_line(data=aggregated_uzh_economy,
#           aes(x=year, y=total_emission, color="optimal"),
#           size=.75) +
# geom_line(data=aggregated_uzh_regular,
#           aes(x=year, y=total_emission, color="observed"),
#           size=.75) +
# geom_point(data=aggregated_uzh_economy,
#             aes(x=year, y=total_emission),
#             color=orange, size=1.5) +
# geom_point(data=aggregated_uzh_regular,
#             aes(x=year, y=total_emission),
#             color=green, size=1.5) +
geom_hline(yintercept = 562793.7, linetype="dotted", size=.5)+
annotate("text", x = 2018.75, y = 590000, label=label, color=green, size=3) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(300000,max_co2*1.02)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("target UZH", "target UZH all economy"),
values = c(red,blue))+
theme_light() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "right")
total_co2_plot
ggsave(file="Figures/target_goal_plot.png", total_co2_plot,
width = 10,
height= 7)
label <- paste0("MNF reduction target")
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2_regular,
aes(x, y, color="target UZH"), linetype="dotted",
size=.75) +
geom_line(data=uzh_target_co2_economy,
aes(x, y, color="target UZH all economy"), linetype="dotted",
size=.75) +
# geom_line(data=aggregated_uzh_economy,
#           aes(x=year, y=total_emission, color="optimal"),
#           size=.75) +
# geom_line(data=aggregated_uzh_regular,
#           aes(x=year, y=total_emission, color="observed"),
#           size=.75) +
# geom_point(data=aggregated_uzh_economy,
#             aes(x=year, y=total_emission),
#             color=orange, size=1.5) +
# geom_point(data=aggregated_uzh_regular,
#             aes(x=year, y=total_emission),
#             color=green, size=1.5) +
geom_hline(yintercept = 562793.7, linetype="dotted", size=.5)+
annotate("text", x = 2018.75, y = 590000, label=label, color=green, size=3) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(300000,1500000)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("target UZH", "target UZH all economy"),
values = c(red,blue))+
theme_light() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "right")
total_co2_plot
ggsave(file="Figures/target_goal_plot.png", total_co2_plot,
width = 10,
height= 7)
label <- paste0("MNF reduction target")
# Total air travel at MNF
total_co2_plot <- ggplot() +
geom_line(data=uzh_target_co2_regular,
aes(x, y, color="target UZH"), linetype="dotted",
size=.75) +
geom_line(data=uzh_target_co2_economy,
aes(x, y, color="target UZH all economy"), linetype="dotted",
size=.75) +
# geom_line(data=aggregated_uzh_economy,
#           aes(x=year, y=total_emission, color="optimal"),
#           size=.75) +
# geom_line(data=aggregated_uzh_regular,
#           aes(x=year, y=total_emission, color="observed"),
#           size=.75) +
# geom_point(data=aggregated_uzh_economy,
#             aes(x=year, y=total_emission),
#             color=orange, size=1.5) +
# geom_point(data=aggregated_uzh_regular,
#             aes(x=year, y=total_emission),
#             color=green, size=1.5) +
geom_hline(yintercept = 562793.7, linetype="dotted", size=.5)+
annotate("text", x = 2018.75, y = 590000, label=label, color=green, size=3) +
ylab("kg CO2 eq.") +
scale_x_continuous(breaks=full_period,
limits=c(min(full_period),
max(full_period))) +
scale_y_continuous(label=comma,
limits=c(400000,1300000)) +
ggtitle("UZH air travel (2018-2020): emissions")+
scale_colour_manual("",
breaks = c("target UZH", "target UZH all economy"),
values = c(red,blue))+
theme_light() +
theme(text = element_text(size=16),
axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "right")
total_co2_plot
ggsave(file="Figures/target_goal_plot.png", total_co2_plot,
width = 10,
height= 7)
